events {
    worker_connections 1024;
}

http {    upstream backend_cluster {
        # Load balance across both backend instances
        server backend-1:8080 max_fails=3 fail_timeout=30s;
        server backend-2:8080 max_fails=3 fail_timeout=30s;
    }

    upstream backend_cluster_sticky {
        # IP hash for sticky sessions (SSE endpoints)
        ip_hash;
        server backend-1:8080 max_fails=3 fail_timeout=30s;
        server backend-2:8080 max_fails=3 fail_timeout=30s;
    }

    # Sticky sessions for SSE connections (based on JWT token hash)
    map $http_authorization $backend_pool {
        ~^Bearer\s+(.+)$ $1;
        default "";
    }

    # Log format for debugging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'backend="$upstream_addr"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    server {
        listen 80;
        server_name localhost;

        # Proxy settings for SSE
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Important for SSE
        proxy_cache_bypass $http_upgrade;
        proxy_buffering off;
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }        # SSE endpoints - use consistent routing based on auth token
        location /api/notifications/stream {
            proxy_pass http://backend_cluster_sticky;
        }

        # Other API endpoints can use round-robin
        location /api/ {
            proxy_pass http://backend_cluster;
        }

        # Root endpoint
        location / {
            proxy_pass http://backend_cluster;
        }
    }
}
